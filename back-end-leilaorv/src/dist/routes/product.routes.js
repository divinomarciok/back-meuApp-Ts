"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.productRoutes = void 0;
const express_1 = require("express");
const product_controller_1 = require("../controllers/product.controller");
const upload_middleware_1 = require("../middleware/upload.middleware");
const authenticateToken_1 = require("../middleware/authenticateToken");
const router = (0, express_1.Router)();
exports.productRoutes = router;
const productController = new product_controller_1.ProductController();
router.post('/products', authenticateToken_1.authenticateToken, upload_middleware_1.uploadMiddleware.single('image'), (req, res) => productController.create(req, res));
router.put('/products/:id', authenticateToken_1.authenticateToken, upload_middleware_1.uploadMiddleware.single('image'), (req, res) => productController.update(req, res));
router.delete('/products/:id', authenticateToken_1.authenticateToken, (req, res) => productController.delete(req, res));
router.get('/products', authenticateToken_1.authenticateToken, (req, res) => productController.list(req, res));
router.get('/products/sales', authenticateToken_1.authenticateToken, (req, res) => productController.listSale(req, res));
router.get('/products/name', authenticateToken_1.authenticateToken, (req, res) => productController.findByName(req, res));
router.get('/products/mark', authenticateToken_1.authenticateToken, (req, res) => productController.findByMark(req, res));
router.get('/products/category/:categoryId', authenticateToken_1.authenticateToken, (req, res) => productController.findByCategory(req, res));
router.get('/products/user/:userId', authenticateToken_1.authenticateToken, (req, res) => productController.findByUser(req, res));
router.get('/products/search', authenticateToken_1.authenticateToken, (req, res) => productController.search(req, res));
router.get('/products/:id', authenticateToken_1.authenticateToken, (req, res) => productController.findById(req, res));
